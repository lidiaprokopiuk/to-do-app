{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\LIDIA\\\\website\\\\react\\\\to_do_app\\\\src\\\\components\\\\ToDoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    //do not refresh page\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      //draw id\n      text: input\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"to-do_form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        name: \"text\",\n        className: \"to-do_input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"to-do_button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a to do\",\n        value: input,\n        name: \"text\",\n        className: \"to-do_input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"to-do_button\",\n        children: \"Add to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = ToDoForm;\nexport default ToDoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ToDoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["C:/Users/Administrator/Desktop/LIDIA/website/react/to_do_app/src/components/ToDoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction ToDoForm(props) {\r\n\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        //do not refresh page\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000), //draw id\r\n            text: input\r\n        });\r\n    };\r\n    \r\n\r\n  return (\r\n    <form className=\"to-do_form\" onSubmit={handleSubmit}>\r\n        {props.edit ? (\r\n            <>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Update your item\" \r\n            value={input} \r\n            name=\"text\" \r\n            className=\"to-do_input edit\"\r\n            onChange={handleChange} \r\n            ref={inputRef} />\r\n            <button className=\"to-do_button\">\r\n                Update\r\n            </button> \r\n            </>\r\n            ) : (\r\n            <>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Add a to do\" \r\n            value={input} \r\n            name=\"text\" \r\n            className=\"to-do_input\"\r\n            onChange={handleChange} \r\n            ref={inputRef} />\r\n            <button className=\"to-do_button\">\r\n                Add to do\r\n            </button>\r\n            </>\r\n            )\r\n        }\r\n      \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ToDoForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;EAEA,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;EAEAD,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;EACH,CAFQ,CAAT;;EAIA,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACtB;IACAA,CAAC,CAACG,cAAF;IAEAZ,KAAK,CAACa,QAAN,CAAe;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;MAC4B;MACvCC,IAAI,EAAEjB;IAFK,CAAf;EAIH,CARD;;EAWF,oBACE;IAAM,SAAS,EAAC,YAAhB;IAA6B,QAAQ,EAAEU,YAAvC;IAAA,UACKX,KAAK,CAACG,IAAN,gBACG;MAAA,wBACA;QACA,IAAI,EAAC,MADL;QAEA,WAAW,EAAC,kBAFZ;QAGA,KAAK,EAAEF,KAHP;QAIA,IAAI,EAAC,MAJL;QAKA,SAAS,EAAC,kBALV;QAMA,QAAQ,EAAEO,YANV;QAOA,GAAG,EAAEH;MAPL;QAAA;QAAA;QAAA;MAAA,QADA,eASA;QAAQ,SAAS,EAAC,cAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATA;IAAA,gBADH,gBAeG;MAAA,wBACA;QACA,IAAI,EAAC,MADL;QAEA,WAAW,EAAC,aAFZ;QAGA,KAAK,EAAEJ,KAHP;QAIA,IAAI,EAAC,MAJL;QAKA,SAAS,EAAC,aALV;QAMA,QAAQ,EAAEO,YANV;QAOA,GAAG,EAAEH;MAPL;QAAA;QAAA;QAAA;MAAA,QADA,eASA;QAAQ,SAAS,EAAC,cAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATA;IAAA;EAhBR;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GA5DQN,Q;;KAAAA,Q;AA8DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}