{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\LIDIA\\\\website\\\\react\\\\to_do_app\\\\src\\\\components\\\\ToDoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    input.Ref.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    //do not refresh page\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      //draw id\n      text: input\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"to-do_form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a to do\",\n      value: input,\n      name: \"text\",\n      className: \"to-do_input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"to-do_button\",\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoForm, \"4bB8PA6vI65WiV8dMZT00Ka0B5A=\");\n\n_c = ToDoForm;\nexport default ToDoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ToDoForm","props","input","setInput","inputRef","Ref","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["C:/Users/Administrator/Desktop/LIDIA/website/react/to_do_app/src/components/ToDoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction ToDoForm(props) {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        input.Ref.current.focus();\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        //do not refresh page\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000), //draw id\r\n            text: input\r\n        });\r\n    };\r\n    \r\n\r\n  return (\r\n    <form className=\"to-do_form\" onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Add a to do\" \r\n        value={input} \r\n        name=\"text\" \r\n        className=\"to-do_input\"\r\n        onChange={handleChange} />\r\n        <button className=\"to-do_button\">\r\n            Add to do\r\n        </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ToDoForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMO,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;EAEAD,SAAS,CAAC,MAAM;IACZI,KAAK,CAACG,GAAN,CAAUC,OAAV,CAAkBC,KAAlB;EACH,CAFQ,CAAT;;EAIA,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAGH,CAAC,IAAI;IACtB;IACAA,CAAC,CAACI,cAAF;IAEAZ,KAAK,CAACa,QAAN,CAAe;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;MAC4B;MACvCC,IAAI,EAAEjB;IAFK,CAAf;EAIH,CARD;;EAWF,oBACE;IAAM,SAAS,EAAC,YAAhB;IAA6B,QAAQ,EAAEU,YAAvC;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,aAFd;MAGE,KAAK,EAAEV,KAHT;MAIE,IAAI,EAAC,MAJP;MAKE,SAAS,EAAC,aALZ;MAME,QAAQ,EAAEM;IANZ;MAAA;MAAA;MAAA;IAAA,QADF,eAQI;MAAQ,SAAS,EAAC,cAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAvCQR,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}